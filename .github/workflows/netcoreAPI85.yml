name: Compile e implemente la aplicación de .NET Core en la aplicación web netcoreAPI85 con el servicio API Management netcoreAPI-netcoreAPI
on:
  push:
    branches:
    - master
env:
  AZURE_WEBAPP_NAME: netcoreAPI85
  AZURE_WEBAPP_PACKAGE_PATH: netcoreAPI\publish
  AZURE_APIM_RESOURCE_PATH: /
  AZURE_APIM_RESOURCEGROUP: netcoreAPI20231021141433ResourceGroup
  AZURE_APIM_SERVICENAME: netcoreAPI
  AZURE_APIM_API_ID: netcoreAPI
  AZURE_APIM_APPSERVICEURL: https://netcoreapi85.azurewebsites.net
  SWASHBUCLE_ASPNET_CORE_CLI_PACKAGE_VERSION: 6.5.0
  SWASHBUCKLE_DOTNET_CORE_VERSION: 7.0.x
  API_IMPORT_SPECIFICATION_PATH: netcoreAPI\publish\swagger.json
  API_IMPORT_DLL: netcoreAPI\bin\Release\net7.0\netcoreAPI.dll
  API_IMPORT_VERSION: v1
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 7.0.x
  WORKING_DIRECTORY: netcoreAPI
jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
    - name: Setup SwashBuckle .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.SWASHBUCKLE_DOTNET_CORE_VERSION }}
    - name: Restore
      run: dotnet restore ${{ env.WORKING_DIRECTORY }}
    - name: Build
      run: dotnet build ${{ env.WORKING_DIRECTORY }} --configuration ${{ env.CONFIGURATION }} --no-restore
    - name: Test
      run: dotnet test ${{ env.WORKING_DIRECTORY }} --no-build
    - name: Publish
      run: dotnet publish ${{ env.WORKING_DIRECTORY }} --configuration ${{ env.CONFIGURATION }} --no-build --output ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
    - name: Install Swashbuckle CLI .NET Global Tool
      run: dotnet tool install --global Swashbuckle.AspNetCore.Cli --version ${{ env.SWASHBUCLE_ASPNET_CORE_CLI_PACKAGE_VERSION }}
      working-directory: ${{ env.WORKING_DIRECTORY }}
    #- name: Generate Open API Specification Document
    #  run: swagger tofile --output "${{ env.API_IMPORT_SPECIFICATION_PATH }}" "${{ env.API_IMPORT_DLL }}" "${{ env.API_IMPORT_VERSION }}"
    - name: Publish Artifacts
      uses: actions/upload-artifact@v1.0.0
      with:
        name: webapp
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
  tests:
    name: Unit Testing
    needs: build
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2.1.0
      - run: dotnet test
  deploy:
    runs-on: windows-latest
    needs: tests
    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v2
      with:
        name: webapp
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
    - name: Deploy to Azure WebApp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
        publish-profile: ${{ secrets.netcoreAPI85_FAEF }}
